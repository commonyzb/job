<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.job.dao.ResumeMapper">
  <resultMap id="BaseResultMap" type="com.job.pojo.Resume">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="trueName" jdbcType="VARCHAR" property="truename" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="hight" jdbcType="DECIMAL" property="hight" />
    <result column="knowledge" jdbcType="VARCHAR" property="knowledge" />
    <result column="brithday" jdbcType="TIMESTAMP" property="brithday" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="naddress" jdbcType="VARCHAR" property="naddress" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
    <result column="speciality" jdbcType="VARCHAR" property="speciality" />
    <result column="treatment" jdbcType="VARCHAR" property="treatment" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="typename" jdbcType="VARCHAR" property="typename" />
    <result column="hit" jdbcType="INTEGER" property="hit" />
    <result column="freeze" jdbcType="INTEGER" property="freeze" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.job.pojo.ResumeWithBLOBs">
    <result column="intruduce" jdbcType="LONGVARCHAR" property="intruduce" />
    <result column="experience" jdbcType="LONGVARCHAR" property="experience" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, trueName, sex, hight, knowledge, brithday, address, naddress, nation, 
    school, hobby, speciality, treatment, tel, email, picture, createTime, typename, 
    hit, freeze
  </sql>
  <sql id="Blob_Column_List">
    intruduce, experience
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.job.pojo.ResumeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.job.pojo.ResumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.job.pojo.ResumeExample">
    delete from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.job.pojo.ResumeWithBLOBs">
    insert into resume (id, username, trueName, 
      sex, hight, knowledge, 
      brithday, address, naddress, 
      nation, school, hobby, 
      speciality, treatment, tel, 
      email, picture, createTime, 
      typename, hit, freeze, 
      intruduce, experience)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{truename,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{hight,jdbcType=DECIMAL}, #{knowledge,jdbcType=VARCHAR}, 
      #{brithday,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, #{naddress,jdbcType=VARCHAR}, 
      #{nation,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{hobby,jdbcType=VARCHAR}, 
      #{speciality,jdbcType=VARCHAR}, #{treatment,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{typename,jdbcType=VARCHAR}, #{hit,jdbcType=INTEGER}, #{freeze,jdbcType=INTEGER}, 
      #{intruduce,jdbcType=LONGVARCHAR}, #{experience,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.job.pojo.ResumeWithBLOBs">
    insert into resume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="truename != null">
        trueName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="hight != null">
        hight,
      </if>
      <if test="knowledge != null">
        knowledge,
      </if>
      <if test="brithday != null">
        brithday,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="naddress != null">
        naddress,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
      <if test="speciality != null">
        speciality,
      </if>
      <if test="treatment != null">
        treatment,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="typename != null">
        typename,
      </if>
      <if test="hit != null">
        hit,
      </if>
      <if test="freeze != null">
        freeze,
      </if>
      <if test="intruduce != null">
        intruduce,
      </if>
      <if test="experience != null">
        experience,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="truename != null">
        #{truename,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="hight != null">
        #{hight,jdbcType=DECIMAL},
      </if>
      <if test="knowledge != null">
        #{knowledge,jdbcType=VARCHAR},
      </if>
      <if test="brithday != null">
        #{brithday,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="naddress != null">
        #{naddress,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null">
        #{speciality,jdbcType=VARCHAR},
      </if>
      <if test="treatment != null">
        #{treatment,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="typename != null">
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="hit != null">
        #{hit,jdbcType=INTEGER},
      </if>
      <if test="freeze != null">
        #{freeze,jdbcType=INTEGER},
      </if>
      <if test="intruduce != null">
        #{intruduce,jdbcType=LONGVARCHAR},
      </if>
      <if test="experience != null">
        #{experience,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.job.pojo.ResumeExample" resultType="java.lang.Long">
    select count(*) from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update resume
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.truename != null">
        trueName = #{record.truename,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.hight != null">
        hight = #{record.hight,jdbcType=DECIMAL},
      </if>
      <if test="record.knowledge != null">
        knowledge = #{record.knowledge,jdbcType=VARCHAR},
      </if>
      <if test="record.brithday != null">
        brithday = #{record.brithday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.naddress != null">
        naddress = #{record.naddress,jdbcType=VARCHAR},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.hobby != null">
        hobby = #{record.hobby,jdbcType=VARCHAR},
      </if>
      <if test="record.speciality != null">
        speciality = #{record.speciality,jdbcType=VARCHAR},
      </if>
      <if test="record.treatment != null">
        treatment = #{record.treatment,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.typename != null">
        typename = #{record.typename,jdbcType=VARCHAR},
      </if>
      <if test="record.hit != null">
        hit = #{record.hit,jdbcType=INTEGER},
      </if>
      <if test="record.freeze != null">
        freeze = #{record.freeze,jdbcType=INTEGER},
      </if>
      <if test="record.intruduce != null">
        intruduce = #{record.intruduce,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.experience != null">
        experience = #{record.experience,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update resume
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      trueName = #{record.truename,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      hight = #{record.hight,jdbcType=DECIMAL},
      knowledge = #{record.knowledge,jdbcType=VARCHAR},
      brithday = #{record.brithday,jdbcType=TIMESTAMP},
      address = #{record.address,jdbcType=VARCHAR},
      naddress = #{record.naddress,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      hobby = #{record.hobby,jdbcType=VARCHAR},
      speciality = #{record.speciality,jdbcType=VARCHAR},
      treatment = #{record.treatment,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      typename = #{record.typename,jdbcType=VARCHAR},
      hit = #{record.hit,jdbcType=INTEGER},
      freeze = #{record.freeze,jdbcType=INTEGER},
      intruduce = #{record.intruduce,jdbcType=LONGVARCHAR},
      experience = #{record.experience,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update resume
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      trueName = #{record.truename,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      hight = #{record.hight,jdbcType=DECIMAL},
      knowledge = #{record.knowledge,jdbcType=VARCHAR},
      brithday = #{record.brithday,jdbcType=TIMESTAMP},
      address = #{record.address,jdbcType=VARCHAR},
      naddress = #{record.naddress,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      hobby = #{record.hobby,jdbcType=VARCHAR},
      speciality = #{record.speciality,jdbcType=VARCHAR},
      treatment = #{record.treatment,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      typename = #{record.typename,jdbcType=VARCHAR},
      hit = #{record.hit,jdbcType=INTEGER},
      freeze = #{record.freeze,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.job.pojo.Resume">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="trueName" jdbcType="VARCHAR" property="truename" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="hight" jdbcType="DECIMAL" property="hight" />
    <result column="knowledge" jdbcType="VARCHAR" property="knowledge" />
    <result column="brithday" jdbcType="TIMESTAMP" property="brithday" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="naddress" jdbcType="VARCHAR" property="naddress" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
    <result column="speciality" jdbcType="VARCHAR" property="speciality" />
    <result column="treatment" jdbcType="VARCHAR" property="treatment" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="typename" jdbcType="VARCHAR" property="typename" />
    <result column="hit" jdbcType="INTEGER" property="hit" />
    <result column="freeze" jdbcType="INTEGER" property="freeze" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.job.pojo.ResumeWithBLOBs">
    <result column="intruduce" jdbcType="LONGVARCHAR" property="intruduce" />
    <result column="experience" jdbcType="LONGVARCHAR" property="experience" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, trueName, sex, hight, knowledge, brithday, address, naddress, nation, 
    school, hobby, speciality, treatment, tel, email, picture, createTime, typename, 
    hit, freeze
  </sql>
  <sql id="Blob_Column_List">
    intruduce, experience
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.job.pojo.ResumeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.job.pojo.ResumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.job.pojo.ResumeExample">
    delete from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.job.pojo.ResumeWithBLOBs">
    insert into resume (id, username, trueName, 
      sex, hight, knowledge, 
      brithday, address, naddress, 
      nation, school, hobby, 
      speciality, treatment, tel, 
      email, picture, createTime, 
      typename, hit, freeze, 
      intruduce, experience)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{truename,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{hight,jdbcType=DECIMAL}, #{knowledge,jdbcType=VARCHAR}, 
      #{brithday,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, #{naddress,jdbcType=VARCHAR}, 
      #{nation,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{hobby,jdbcType=VARCHAR}, 
      #{speciality,jdbcType=VARCHAR}, #{treatment,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{typename,jdbcType=VARCHAR}, #{hit,jdbcType=INTEGER}, #{freeze,jdbcType=INTEGER}, 
      #{intruduce,jdbcType=LONGVARCHAR}, #{experience,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.job.pojo.ResumeWithBLOBs">
    insert into resume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="truename != null">
        trueName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="hight != null">
        hight,
      </if>
      <if test="knowledge != null">
        knowledge,
      </if>
      <if test="brithday != null">
        brithday,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="naddress != null">
        naddress,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
      <if test="speciality != null">
        speciality,
      </if>
      <if test="treatment != null">
        treatment,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="typename != null">
        typename,
      </if>
      <if test="hit != null">
        hit,
      </if>
      <if test="freeze != null">
        freeze,
      </if>
      <if test="intruduce != null">
        intruduce,
      </if>
      <if test="experience != null">
        experience,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="truename != null">
        #{truename,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="hight != null">
        #{hight,jdbcType=DECIMAL},
      </if>
      <if test="knowledge != null">
        #{knowledge,jdbcType=VARCHAR},
      </if>
      <if test="brithday != null">
        #{brithday,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="naddress != null">
        #{naddress,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null">
        #{speciality,jdbcType=VARCHAR},
      </if>
      <if test="treatment != null">
        #{treatment,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="typename != null">
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="hit != null">
        #{hit,jdbcType=INTEGER},
      </if>
      <if test="freeze != null">
        #{freeze,jdbcType=INTEGER},
      </if>
      <if test="intruduce != null">
        #{intruduce,jdbcType=LONGVARCHAR},
      </if>
      <if test="experience != null">
        #{experience,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.job.pojo.ResumeExample" resultType="java.lang.Long">
    select count(*) from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update resume
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.truename != null">
        trueName = #{record.truename,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.hight != null">
        hight = #{record.hight,jdbcType=DECIMAL},
      </if>
      <if test="record.knowledge != null">
        knowledge = #{record.knowledge,jdbcType=VARCHAR},
      </if>
      <if test="record.brithday != null">
        brithday = #{record.brithday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.naddress != null">
        naddress = #{record.naddress,jdbcType=VARCHAR},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.hobby != null">
        hobby = #{record.hobby,jdbcType=VARCHAR},
      </if>
      <if test="record.speciality != null">
        speciality = #{record.speciality,jdbcType=VARCHAR},
      </if>
      <if test="record.treatment != null">
        treatment = #{record.treatment,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.typename != null">
        typename = #{record.typename,jdbcType=VARCHAR},
      </if>
      <if test="record.hit != null">
        hit = #{record.hit,jdbcType=INTEGER},
      </if>
      <if test="record.freeze != null">
        freeze = #{record.freeze,jdbcType=INTEGER},
      </if>
      <if test="record.intruduce != null">
        intruduce = #{record.intruduce,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.experience != null">
        experience = #{record.experience,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update resume
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      trueName = #{record.truename,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      hight = #{record.hight,jdbcType=DECIMAL},
      knowledge = #{record.knowledge,jdbcType=VARCHAR},
      brithday = #{record.brithday,jdbcType=TIMESTAMP},
      address = #{record.address,jdbcType=VARCHAR},
      naddress = #{record.naddress,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      hobby = #{record.hobby,jdbcType=VARCHAR},
      speciality = #{record.speciality,jdbcType=VARCHAR},
      treatment = #{record.treatment,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      typename = #{record.typename,jdbcType=VARCHAR},
      hit = #{record.hit,jdbcType=INTEGER},
      freeze = #{record.freeze,jdbcType=INTEGER},
      intruduce = #{record.intruduce,jdbcType=LONGVARCHAR},
      experience = #{record.experience,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update resume
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      trueName = #{record.truename,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      hight = #{record.hight,jdbcType=DECIMAL},
      knowledge = #{record.knowledge,jdbcType=VARCHAR},
      brithday = #{record.brithday,jdbcType=TIMESTAMP},
      address = #{record.address,jdbcType=VARCHAR},
      naddress = #{record.naddress,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      hobby = #{record.hobby,jdbcType=VARCHAR},
      speciality = #{record.speciality,jdbcType=VARCHAR},
      treatment = #{record.treatment,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      typename = #{record.typename,jdbcType=VARCHAR},
      hit = #{record.hit,jdbcType=INTEGER},
      freeze = #{record.freeze,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>