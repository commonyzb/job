<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.job.dao.AdminMapper">
  <resultMap id="BaseResultMap" type="com.job.pojo.Admin">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="admin" jdbcType="VARCHAR" property="admin" />
    <result column="master" jdbcType="INTEGER" property="master" />
    <result column="froze" jdbcType="INTEGER" property="froze" />
    <result column="delect" jdbcType="INTEGER" property="delect" />
    <result column="repassword" jdbcType="INTEGER" property="repassword" />
    <result column="select" jdbcType="INTEGER" property="select" />
    <result column="freeze" jdbcType="INTEGER" property="freeze" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, admin, master, froze, delect, repassword, select, freeze
  </sql>
  <select id="selectByExample" parameterType="com.job.pojo.AdminExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.job.pojo.AdminExample">
    delete from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.job.pojo.Admin">
    insert into admin (id, admin, master, 
      froze, delect, repassword, 
      select, freeze)
    values (#{id,jdbcType=INTEGER}, #{admin,jdbcType=VARCHAR}, #{master,jdbcType=INTEGER}, 
      #{froze,jdbcType=INTEGER}, #{delect,jdbcType=INTEGER}, #{repassword,jdbcType=INTEGER}, 
      #{select,jdbcType=INTEGER}, #{freeze,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.job.pojo.Admin">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="admin != null">
        admin,
      </if>
      <if test="master != null">
        master,
      </if>
      <if test="froze != null">
        froze,
      </if>
      <if test="delect != null">
        delect,
      </if>
      <if test="repassword != null">
        repassword,
      </if>
      <if test="select != null">
        select,
      </if>
      <if test="freeze != null">
        freeze,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="admin != null">
        #{admin,jdbcType=VARCHAR},
      </if>
      <if test="master != null">
        #{master,jdbcType=INTEGER},
      </if>
      <if test="froze != null">
        #{froze,jdbcType=INTEGER},
      </if>
      <if test="delect != null">
        #{delect,jdbcType=INTEGER},
      </if>
      <if test="repassword != null">
        #{repassword,jdbcType=INTEGER},
      </if>
      <if test="select != null">
        #{select,jdbcType=INTEGER},
      </if>
      <if test="freeze != null">
        #{freeze,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.job.pojo.AdminExample" resultType="java.lang.Long">
    select count(*) from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.admin != null">
        admin = #{record.admin,jdbcType=VARCHAR},
      </if>
      <if test="record.master != null">
        master = #{record.master,jdbcType=INTEGER},
      </if>
      <if test="record.froze != null">
        froze = #{record.froze,jdbcType=INTEGER},
      </if>
      <if test="record.delect != null">
        delect = #{record.delect,jdbcType=INTEGER},
      </if>
      <if test="record.repassword != null">
        repassword = #{record.repassword,jdbcType=INTEGER},
      </if>
      <if test="record.select != null">
        select = #{record.select,jdbcType=INTEGER},
      </if>
      <if test="record.freeze != null">
        freeze = #{record.freeze,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin
    set id = #{record.id,jdbcType=INTEGER},
      admin = #{record.admin,jdbcType=VARCHAR},
      master = #{record.master,jdbcType=INTEGER},
      froze = #{record.froze,jdbcType=INTEGER},
      delect = #{record.delect,jdbcType=INTEGER},
      repassword = #{record.repassword,jdbcType=INTEGER},
      select = #{record.select,jdbcType=INTEGER},
      freeze = #{record.freeze,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.job.pojo.Admin">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="admin" jdbcType="VARCHAR" property="admin" />
    <result column="super" jdbcType="INTEGER" property="super" />
    <result column="froze" jdbcType="INTEGER" property="froze" />
    <result column="delect" jdbcType="INTEGER" property="delect" />
    <result column="repassword" jdbcType="INTEGER" property="repassword" />
    <result column="select" jdbcType="INTEGER" property="select" />
    <result column="freeze" jdbcType="INTEGER" property="freeze" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, admin, super, froze, delect, repassword, select, freeze
  </sql>
  <select id="selectByExample" parameterType="com.job.pojo.AdminExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.job.pojo.AdminExample">
    delete from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.job.pojo.Admin">
    insert into admin (id, admin, super, 
      froze, delect, repassword, 
      select, freeze)
    values (#{id,jdbcType=INTEGER}, #{admin,jdbcType=VARCHAR}, #{super,jdbcType=INTEGER}, 
      #{froze,jdbcType=INTEGER}, #{delect,jdbcType=INTEGER}, #{repassword,jdbcType=INTEGER}, 
      #{select,jdbcType=INTEGER}, #{freeze,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.job.pojo.Admin">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="admin != null">
        admin,
      </if>
      <if test="super != null">
        super,
      </if>
      <if test="froze != null">
        froze,
      </if>
      <if test="delect != null">
        delect,
      </if>
      <if test="repassword != null">
        repassword,
      </if>
      <if test="select != null">
        select,
      </if>
      <if test="freeze != null">
        freeze,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="admin != null">
        #{admin,jdbcType=VARCHAR},
      </if>
      <if test="super != null">
        #{super,jdbcType=INTEGER},
      </if>
      <if test="froze != null">
        #{froze,jdbcType=INTEGER},
      </if>
      <if test="delect != null">
        #{delect,jdbcType=INTEGER},
      </if>
      <if test="repassword != null">
        #{repassword,jdbcType=INTEGER},
      </if>
      <if test="select != null">
        #{select,jdbcType=INTEGER},
      </if>
      <if test="freeze != null">
        #{freeze,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.job.pojo.AdminExample" resultType="java.lang.Long">
    select count(*) from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.admin != null">
        admin = #{record.admin,jdbcType=VARCHAR},
      </if>
      <if test="record.super != null">
        super = #{record.super,jdbcType=INTEGER},
      </if>
      <if test="record.froze != null">
        froze = #{record.froze,jdbcType=INTEGER},
      </if>
      <if test="record.delect != null">
        delect = #{record.delect,jdbcType=INTEGER},
      </if>
      <if test="record.repassword != null">
        repassword = #{record.repassword,jdbcType=INTEGER},
      </if>
      <if test="record.select != null">
        select = #{record.select,jdbcType=INTEGER},
      </if>
      <if test="record.freeze != null">
        freeze = #{record.freeze,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin
    set id = #{record.id,jdbcType=INTEGER},
      admin = #{record.admin,jdbcType=VARCHAR},
      super = #{record.super,jdbcType=INTEGER},
      froze = #{record.froze,jdbcType=INTEGER},
      delect = #{record.delect,jdbcType=INTEGER},
      repassword = #{record.repassword,jdbcType=INTEGER},
      select = #{record.select,jdbcType=INTEGER},
      freeze = #{record.freeze,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>